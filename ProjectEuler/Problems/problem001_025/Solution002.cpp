// https://projecteuler.net/problem=2
/* 
Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting 
with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the 
sum of the even-valued terms.

Solution:
F1 = 1, F2 = 2, F3 = 3, F4 = 5, F5 = 8
2 is first even term
next even term will be F5 = 8
let a = Fi and b = Fi+1
we can directly jump from F1,F2 to F4,F5 i.e. odd,even pair

F3 = F1+F2
F4 = F3+F2 = F1+F2 + F2 = F1+2*F2
F5 = F4+F3 = F4 + F1+F2 = 2*F1+3*F2
*/

#include <iostream>

using namespace std;
typedef int natural;

const natural limit = 4000000;

int main(){
	natural Fi = 1, Fi1 = 2, sum = 0;

	while (Fi1 <= limit){
		sum += Fi1;

		natural F = Fi;
		Fi = F + 2 * Fi1;
		Fi1 = Fi + F + Fi1;
	}

	cout << sum << endl;
}